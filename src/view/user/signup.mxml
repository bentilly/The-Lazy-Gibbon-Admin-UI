<?xml version="1.0" encoding="utf-8"?>
<s:VGroup xmlns:fx="http://ns.adobe.com/mxml/2009" 
		 xmlns:s="library://ns.adobe.com/flex/spark" 
		 xmlns:mx="library://ns.adobe.com/flex/mx" 
		 
		 width="100%" height="100%"
		 paddingBottom="10" paddingLeft="10" paddingRight="10" paddingTop="10"
		 >
	
	<fx:Script>
		<![CDATA[
			import com.adobe.crypto.MD5;
			
			import mx.controls.Alert;
			import mx.validators.Validator;
			
			import events.RequestEvent;
			
			private function validateForm(event:MouseEvent):void {
				var validatorErrorArray:Array = Validator.validateAll([nameValidator, emailValidator, pwValidator]);
				var isValidForm:Boolean = validatorErrorArray.length == 0;
				if (isValidForm) {
					var re:RequestEvent = new RequestEvent(RequestEvent.USER_SIGNUP);
					//make object
					var requestObj:Object = new Object();
					requestObj.operation = 'user.signup';
					requestObj.name = nameInput.text;
					requestObj.email = emailInput.text;
					requestObj.password = MD5.hash(passwordInput.text);
					
					re.requestJson = JSON.stringify(requestObj);
					//dispatchEvent(re);
					trace(re.requestJson);
				} else {
					Alert.show("The form is not valid!", "Somethings up");
				}
			}
		]]>
	</fx:Script>
	
	
	<fx:Declarations>
		<mx:StringValidator id="nameValidator" source="{nameInput}" property="text" required="true"/>
		<mx:EmailValidator id="emailValidator" source="{emailInput}" property="text" required="true"/>
		<mx:StringValidator id="pwValidator" source="{passwordInput}" property="text" required="true"/>
	</fx:Declarations>
	
	<s:Label text="user.signup" styleName="pageTitle"/>
	
	<s:BorderContainer backgroundColor="0xeeeeee">
		<s:VGroup paddingBottom="10" paddingLeft="10" paddingRight="10" paddingTop="10">
			<s:Label text="name:"/>
			<s:TextInput id="nameInput"/>
			<s:Label text="email:"/>
			<s:TextInput id="emailInput"/>
			<s:Label text="password:"/>
			<s:TextInput id="passwordInput" displayAsPassword="true"/>
			<s:Button id="submitButton" label="go" click="validateForm(event)"/>
		</s:VGroup>
	</s:BorderContainer>
	
	
</s:VGroup>
